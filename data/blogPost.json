[{"title":"I'm now a Brave Verified Creator","slug":"brave-verified-creator","description":"I've signed up as a Brave Creator so I benefit from Brave's amazing new approach to monetizing content on the web. If you're a content creator, you should sign up too!","body":"Following on from [my previous post about the Brave web browser](/post/brave-brilliant-browser-and-the-future-of-online-advertising \"Brave: Brilliant Browser and the Future of Online Ads\"), I've now become a Brave Verified Creator!\n\n## What Does This Mean?\n\nIf you use the [Brave](https://brave.com/ \"Brave browser homepage\") browser and are opted-in to Brave Rewards and Auto-Contributions it means I'll get a small portion of the [Basic Attention Tokens (BAT)](https://basicattentiontoken.org/ \"Basic Attention Tokens homepage\") you receive for viewing ads.\n\nAs I talked about in my previous post, it's a brilliant mechanism to allow creators like me to monetize their content really easily without forcing visitors to see horrible, intrusive on-page advertisements. If you're interested in supporting small content creators like me without it costing you a penny, you should definitely give Brave a try!\n\n## What Am I Going to Do with All My New Found Riches?\n\nThe reality is that I don't stand to earn very much, if anything at all with the small number of visitors I bring to this site. But on the off chance I earn a few pennies it'll go towards covering the cost of renewing my domain purchase, so it makes keeping this website going that little bit cheaper for me.\n\n## Content Creator? Consider Signing Up!\n\nIf you want to take advantage of Brave Rewards, you can do so completely free of charge! Here's an overview of what you need to do:\n\n1. [Download Brave](https://brave.com/download/ \"Brave browser download page\")\n1. Set Up Brave Rewards\n    - Brave will guide you through this process\n    - You can make changes via Brave's settings at any time\n1. [Connect and verify your Brave Wallet](https://support.brave.com/hc/en-us/articles/360034841711-What-is-a-verified-wallet- \"Brave support article about verified wallets\") with [Uphold](https://uphold.com/ \"Uphold homepage\")\n    - The wallet gets created alongside the Brave Rewards setup\n1. [Sign up as a Brave Creator](https://creators.brave.com/ \"Brave Creators homepage\")\n1. [Verify ownership of your content](https://support.brave.com/hc/en-us/articles/360021408352 \"Brave support article describing the verification process\")\n    - If, like me, you use the \"File Upload Verification\" method, you can remove the file from the `.well-known/` folder once you've completed verification\n    - You have to wait up to 24 hours for the verification to take effect\n\nI would say the whole process can be done in about 15-20 mins...though that's a bit of a guess because I've not done a straight run-through before.\n\nAnd that's it! You can continue to create the content you and your readers/viewers love and check back every now and then to see how much BAT you're earning by logging into your [Brave Rewards Creators](https://creators.brave.com/ \"Brave Creators homepage\") account.\n","publishDate":"2021-02-15T12:00+00:00","tags":["News","Personal","Content Creators","Browsers","Monetization"],"readTime":2},{"title":"New Year, New Job!","slug":"new-year-new-job","description":"At the end of this month I'll be leaving my role at Amigo Loans and starting my new job as a Frontend Developer at Pulselive!","body":"It's been a little over 3 years since I joined the Engineering Team at Amigo Loans as a Front End Software Engineer, and it's been quite a journey for me.\n\nI have been able to work on a range of websites, web applications, backend services and a native mobile app using some of the latest and greatest tools, libraries and frameworks the frontend world has to offer. I have also had the pleasure of working with some of the most brilliant, hard-working people who have all been incredibly supportive and helped me develop as a professional and as a person.\n\nDespite the positives, and after much thought and deliberation, I believe that it's the right time for me to leave the company and move onto something new.\n\n## So What's Next?\n\nAt the beginning of March I'll be starting my new job as Frontend Developer at [Pulselive](https://www.pulselive.com/ \"Pulselive homepage\")!\n\nI'm incredibly excited to get started and work with new people to build amazing digital products for some of the biggest names in sport. I'm also excited to see how this new job will help me learn new things and grow into a better developer.\n\nI'll also be working with a few ex-Redweb colleagues again which is a great bonus!\n\n## Are You Happy in Your Work?\n\nI have spent a lot of time going back and forth about whether I should stay at Amigo. It was never going to be an easy decision. There are lots of things to consider and always the question of \"is the grass really greener on the other side?\".\n\nIf you are/have been in a similar position of struggling to figure out a way of deciding what's right for you, I have one recommendation which I hope may prove useful to you. Ask yourself this one simple question:\n\n<blockquote>\n  <p class=\"mb-0\">\"Will I be <strong>happy</strong> if I stay?\"</p>\n</blockquote>\n\nI highlight the word \"happy\" because I don't mean \"happy enough\", I mean would it actually bring you genuine, long term happiness?\n\nIf the answer to my question is \"No\" I would suggest that it's time to look for something new. Go out and find somewhere you think will bring you that missing joy.\n\nI think it's only recently dawned on me just how important it is to really enjoy your job. It is such a big part of your life and it affects the other parts of your life more than you might realise.\n\nI plan to write an article on this topic to go into more depth, so be sure to keep an eye out for that!","publishDate":"2021-02-08T12:00+00:00","tags":["News","Personal","Career"],"readTime":2},{"title":"Brave: Brilliant Browser and the Future of Online Ads","slug":"brave-brilliant-browser-and-the-future-of-online-advertising","description":"My favourite features of Brave and an explanation of how its re-imagination of online advertising could lead to a better future for the everyone.","body":"I use [Brave](https://brave.com/ \"Brave browser homepage\") as my primary web browser on all my devices and I absolutely love it. I want to share my favourite features of Brave and explain how its re-imagination of online advertising is beneficial for everyone and could be the future for the web that we've all been hoping for.\n\n## Chromium-Based Browser\n\n[Chromium](https://www.chromium.org/Home \"Chromium project homepage\") is the foundation for a lot of web browsers these days, including [Google Chrome](https://www.google.co.uk/chrome/ \"Google Chrome browser homepage\") and [Microsoft Edge](https://microsoftedgewelcome.microsoft.com/en-gb/ \"Microsoft Edge browser homepage\"). It's a solid option for any browser to build upon and has all the developer tools I know and love using right out of the box.\n\nIt also means that you are able to install anything available in the [Chrome Web Store](https://chrome.google.com/webstore/category/extensions \"Chrome Web Store homepage\"), so you can add all your favourite browser extensions.\n\n## Brave Shields\n\nBrave does a lot to make sure you can browse the web as securely and privately as possible. It's enabled by default but you can turn Shields off on a site-by-site basis if you like. Here's what Brave Shields does for you:\n\n### Ad Blocking\n\nI would imagine most, if not all of us would agree that online advertisements are horrible, distracting and invasive annoyances on a large number of the sites we visit. They detract from the content we're trying to consume and ad platforms use trackers follow us around the web wherever we go. Brave does an excellent job of removing these ads to give you a faster, safer, more private and enjoyable browsing experience.\n\n### Cookie Removal\n\nBrave deletes cookies from the sites you don't actually visit. It makes a lot of sense to only keep the data you need for as long as you need it. If it's not useful anymore, brave will get rid of it!\n\n### Tracking Protection\n\nBrave says it protects you by making your browser harder to recognize and follow without cookies. The truth is that I'm not sure how it does this, but any effort to achieve privacy and anonymity whilst browsing the web is a win in my book!\n\n### Secure Connections\n\nUpgrading you to secure (HTTPS) connections where possible. Websites these days should do this for you anyway, but in case they don't it's good to know that Brave has got you covered.\n\n### Malware Protection\n\nEffective blocking of malicious sites and code is important. It's difficult to know which sites you can trust, so Brave will let you know if it thinks you should be wary.\n\nHaving said that, it's always good to keep an eye out for anything that looks or feels suspicious and not solely rely on blockers to protect you. My advice is always \"If in doubt, get out\".\n\n## Brave Rewards\n\nThis is what makes Brave _really_ special.\n\nAs well as being a top-notch browser, Brave introduces a radical new concept for controlled, less invasive advertising on the web.\n\n### Opt-In to Ads\n\nAs I've talked about before, Brave blocks all on-page advertisements by default. Instead, via Brave Rewards, you can opt-in to privacy-respecting ads which appear to you in the form of notifications. You can click on the notifications to view the ads, if it takes your fancy.\n\n### Why Would You Choose to See Ads?\n\nBrave feels strongly that you should be rewarded for your precious time and attention viewing advertisements, so they have give you [Basic Attention Tokens (BAT)](https://basicattentiontoken.org/ \"Basic Attention Tokens homepage\") for every ad you see.\n\nBAT is a form of cryptocurrency; it has a real monetary value, so Brave are literally paying you to look at advertisements. This reward money is a portion of the income Brave, as an advertising platform, receives from advertisers.\n\n### So Everyone's a Winner?\n\nNearly...\n\nSo far we've seen that the advertisers get their ads seen, Brave makes money from the advertisers and you make money from the advertisers via Brave. But what about content creators? The people who's articles and videos you've come to see, how are they affected by all this?\n\nCreators who use traditional advertising methods on their website will lose out on income because we're blocking the ads on their platforms. \"That's hardly fair!\" I hear you cry...and Brave agrees. It's part of Brave's mission to help content creators earn their money without the use of these intrusive ads.\n\n### Putting Your Rewards to Good Use\n\nYou can, of course, keep the BAT and save it up or cash it out, but the idea is that you use it to help give back to the people who fuel the content on the web.\n\n#### Automatic Contributions\n\nAs you browse the web, Brave will keep track of the portion of your browsing time you're spending on each website. Each month you can tell Brave to distribute a portion of your BAT to all of the content creators of the sites you've visited that month. The creators will get a percentage of your allocated BAT based on the amount of time you've spent looking at their content. What an incredible way to effectively give back, for free!\n\nCreators will need to sign up to be a [Brave Verified Creator](https://creators.brave.com/ \"brave Creators homepage\") in order to receive the rewards. The process is free and easy, so there's no reason not to!\n\n#### Tips\n\nIf particularly love someone's blog post, video, etc., you can give a one off tip! It's a lovely way to say \"thank you\" if you really appreciate what someone's worked hard to create. You can even tip people for things like Tweets, StackOverflow answers and GitHub comments!\n\n## Other Features\n\nThere are other awesome features of this browser like integration with third party crypto services, Tor browsing and a built-in VPN & Firewall (paid feature) but I won't go into detail on that here. You can [check out the full list of Brave features](https://brave.com/features/ \"Brave browser's features page\") for yourself.\n\n## Roundup\n\nSo there you have it: a first-rate browser on a mission to make the web a better place by re-inventing online advertising, rewarding ad consumers and enabling creators to be compensated for their contribution to the web. That sounds like a beautiful future to me!\n","publishDate":"2021-02-11T12:00+00:00","tags":["Browsers","Content Creators","Advertising","Privacy","Crypto","Monetization"],"readTime":5},{"title":"Explained: What Is Abstraction?","slug":"what-is-abstraction","description":"Abstraction is not as complicated as you might first think, especially because you already abstract every day without even thinking about it!","body":"\n## Defining Abstraction\n\nProgrammers often use the word \"abstraction\" when talking about their code but it's not a term new programmers are likely to have come across and understand.\n\n### The Dictionary Definition\n\n<blockquote>\n    \"The act of considering something as a general quality or characteristic, apart from concrete realities, specific objects, or actual instances.\"\n    <footer><cite>\n      <a href=\"https://www.dictionary.com/browse/abstraction\" rel=\"noopener\" target=\"_blank\" title=\"Dictionary.com definition of abstraction\">dictionary.com</a>\n      </cite></footer>\n</blockquote>\n\nI don't know about you, but I don't find this definition particularly helpful. Let's try and make it a bit easier to digest.\n\n### My Alternative Definition\n\nHere's my attempt to redefine \"abstraction\" to make it simpler and more directly applicable to our use case: programming.\n\n<blockquote>\n    \"Providing a label to a piece of code that accurately describes the purpose and actions of that logic.\"\n</blockquote>\n\nI think that's a much easier to understand. The first thing you might think to yourself is \"That just sounds like a description of variables, functions, and classes\"...and you would be right! These can all be forms of abstraction. We'll have a look at each of these a bit later.\n\n## Why Do We Want/Need to Abstract Anything?\n\nBreaking-up code into smaller labelled chunks helps us write clean code which is easy to read, maintain and re-use.\n\n### Focusing on What We Care About\n\nAbstraction helps us focus on results; we don't have to worry about _how_ something is done, we only care about _what_ the result is.\n\n### Readable Code\n\nWe reduce complexity by placing logic behind layered abstractions. This means at the top-level we only see the top-level abstractions, which ultimately makes the code much easier to read. This should become a little clearer when we look at some examples.\n\n### Reusable Code\n\nOnce code has been abstracted we can use it throughout a project again and again. It means that we only have to write the code once instead of repeating ourselves which has a lot of benefits (which is a topic for another time).\n\n## Examples\n\nI'm going to use \"making a BLT sandwich\" as a contrived example.\n\n### Variables\n\nWe have a bunch of variables containing a bunch of values, like this:\n\n```js\nconst breadState = \"buttered\";\nconst baconState = \"raw\";\nconst lettuceState = \"washed\";\nconst tomatoState = \"washed\";\n```\n\nWe can see all of the states of all the necessary ingredients for our sandwich. Now we want to know whether we can assemble it:\n\n```js\nconst isReadyToAssemble =\n    breadState === \"buttered\" &&\n    baconState === \"cooked\" &&\n    lettuceState === \"washed\" &&\n    tomatoState === \"sliced\";\n```\n\n`isReadyToAssemble` is an abstraction. Referring back to my earlier definition, `isReadyToAssemble` is the _label_ which describes of whether all of ingredients are ready for sandwich assembly. Now, further down in our code, we don't have to concern ourselves with _how_ we know it's ready, we just know that `isReadyToAssemble` will tell us; that's the beauty of abstraction - overlaying more complex logic with a simple label.\n\nIf it helps you can relate this to the real-life equivalent situation. Which of the following questions are you more likely to ask?\n\n1. \"Is the bread buttered and the bacon cooked and the lettuce washed and the tomato sliced for me to assemble the sandwich?\"\n2. \"Are all of the ingredients ready for me to assemble the sandwich?\"\n\nMy guess is that you're a bit more in-line with number 2. So you see, you abstract everyday without even realising!\n\n```js\nif (isReadyToAssemble) {\n    const sandwich = assembleBltSandwich(ingredients);\n}\n```\n\nAnd this leads us nicely on to our next example...\n\n### Functions\n\nSimilar to variables but containing more complex logic.\n\nWe can use `assembleBltSandwich()` as our example here. We know that we can call this function and it will return us an assembled sandwich. All of the logic describing _how_ the sandwich is made is hidden away inside that function.\n\nWe could imagine that the contents of `assembleBltSandwich()` looks something like this:\n\n```js\nfunction assembleBltSandwich(ingredients) {\n    return layBreadButterSideUp(ingredients.bread.sliceOne)\n        .then(() => addMayo(ingredients.mayo))\n        .then(() => addBacon(ingredients.bacon))\n        .then(() => addTomato(ingredients.tomato)) // <-- Tip: never let the tomato touch the bread, it makes it soggy and horrible\n        .then(() => addLettuce(ingredients.lettuce))\n        .then(() => addMayo(ingredients.mayo))\n        .then(() => layBreadButterSideDown(ingredients.bread.sliceTwo));\n}\n```\n\nHere we can once again see that some of the logic is abstracted further into functions like `addBacon()`. The result is layer upon layer of abstraction, with the bottom layers doing the heavy logic and the top layers basically just acting as labelled wrappers to make things easier.\n\n### Classes\n\nI won't go too in-depth with this because I think you're getting the idea by now. You can abstract details and actions of a sandwich into a `BltSandwich` class like so:\n\n```js\nclass BltSandwich extends Sandwich { // <-- You don't have to worry about what's in the base Sandwich class for this example.\n    public ingredients;\n\n    constructor(ingredients) {\n        super(ingredients);\n    }\n\n    public prepare() {\n        ...\n\n        return this;\n    }\n\n    public assemble() {\n        ...\n\n        return this;\n    }\n}\n```\n\nThis is a further abstraction on top of everything we've already covered. So when we want to prepare and assemble a sandwich now, all we have to do is this:\n\n```js\nconst ingredients = {\n    bread,\n    butter,\n    bacon,\n    lettuce,\n    tomato,\n    mayo,\n};\n\nconst sandwich = new BltSandwich(ingredients).prepare().assemble();\n```\n\nAll of the logic is nicely contained inside the class' public methods and we can just enjoy our lovely sandwich.\n\n## Abstract with Caution!\n\nThere are a couple of things to be aware of when thinking about introducing a new abstraction into your code.\n\n### Over-Abstraction\n\nSo abstraction is great, we should use it all the time for everything, right!? Well...not exactly.\n\nIt's easy to go overboard and over-abstract in an attempt to make code super generic and re-usable. You end up losing clarity on the feature you're building because you try to make it work for every possible use case and not the one(s) that you've been presented with. It makes it difficult for anyone else to understand what you've done and why.\n\nThis topic could easily be a whole blog post in itself, which I hope I'll be able to write someday.\n\n### The Wrong Abstraction\n\nCreating the wrong abstractions results in code which is difficult to understand and even more difficult to work with.\n\nThe common scenario is that you have two pieces of code which are doing similar things in multiple different places and, because you want clean code, you merge them together into a generic method which takes a bunch of arguments to make sure it does the right thing depending on there the method is called.\n\nAbstraction complete. Sounds fine, right? But now one of a few things could happen:\n\n1. New requirement: do something exactly the same in a different place\n2. New requirement: do something mostly similar in a different place\n3. New requirement: change the way it works for some of the places but not others\n\nNow you might be able to spot some problems:\n\n1. There's no problem here, but in my experience it's not often you'll get asked to do something which is a carbon copy of something else.\n2. So you need to modify your abstraction and pass it more arguments so that it'll do what you need it to do in this new case. That's going to make it look messy and confusing as you keep adding things into that method.\n3. So you need to modify your abstraction whilst making sure you don't introduce any issues with the other existing code. That's always easier said than done.\n\nSo there is an argument here that the logic should not have been abstracted together in the first place, it would have been better to have isolated duplicate code which means it's easy to modify without causing issues with existing code.\n\nIt's almost impossible to foresee changes in the future so you can't plan for everything, but just try to ask yourself whether the abstraction makes logical sense - don't just do it to keep your code [DRY](https://en.wikipedia.org/wiki/Don%27t_repeat_yourself \"Don't Repeat Yourself: Wikipedia\").\n\n<br />\n<hr />\n<br />\n\n**Update (27/07/2020):** I recently came across [The WET Codebase](https://www.deconstructconf.com/2019/dan-abramov-the-wet-codebase \"The WET Codebase: A talk by Dan Abramov\"): a talk by [Dan Abramov](https://twitter.com/dan_abramov \"Dan Abramov on Twitter\") via [a post on his blog](https://overreacted.io/the-wet-codebase/ \"The WET Codebase: A blog post by Dan Abramov\"). The talk explains a lot if what I've written above very well with some nice clear visuals; it's worth a watch! Also, if you're a fan of [React](https://reactjs.org/ \"React JS\") you'll love the rest of his blog!\n","publishDate":"2020-07-24T12:00+00:00","tags":["Concept","Jargon"],"keywords":["abstract","abstraction","abstracting"],"readTime":7,"series":"Explained"},{"title":"Bootstrap is Dropping its jQuery Dependency","slug":"bootstrap-drops-jquery","description":"I definitely feel that it's the right time for Bootstrap to say goodbye to jQuery and move to rely solely on the powerful capabilities of modern web browsers.","body":"Bootstrap's dependence on jQuery has been a relatively large factor in my reason to stop using it in recent years. Now, with the Bootstrap 5 alpha, they're ditching jQuery in preference of using the APIs provided by modern browsers. This is a big step, but one that I feel is beneficial and necessary to encourage developers like me to use it again on future projects.\n\n## Lets Not Hate on jQuery\n\nI would like to clarify that I don't hate jQuery.\\* I think that jQuery has done an incredible job over the years at making front-end web development a significantly less painful endeavour. The reality these days is that it's not as relevant and necessary anymore. Browser support is far less of an issue because they are much better at keeping up with standards and other libraries and frameworks have been developed which render jQuery less useful. Nevertheless, we can still appreciate that jQuery has served it's purpose extremely well since it was first released all the way back in 2006 and I will forever be thankful for it and all the work people put in to building and maintaining it.\n\n<p class=\"text-sm\">*I personally don't like it when developers talk trash about older tech, languages, libraries, frameworks etc. just because it's a little dated. It's always good to be mindful that people still like use these technologies and it is a perfectly valid choice if it suits their use case.</p>\n\n## Light as a Feather\n\nSo lets take a look and see what impact dropping jQuery has on Bootstrap's file size:\n\n<div class=\"overflow-scroll w-full mt-4 mb-8\">\n    <table>\n        <thead>\n            <tr>\n                <th>Bootstrap Version</th>\n                <th>Files</th>\n                <th>Size (Original)</th>\n                <th>Size (Gzip)</th>\n                <th>Total (Gzip)</th>\n            </tr>\n        </thead>\n        <tbody>\n            <!-- 4.5 -->\n            <tr>\n                <td rowspan=\"2\">v4.5 (latest)</td>\n                <td>Bootstrap</td>\n                <td>60.0 kB</td>\n                <td>14.9 kB</td>\n                <td rowspan=\"2\">39.8 kB</td>\n            </tr>\n            <tr>\n                <td>jQuery</td>\n                <td>72.4 kB</td>\n                <td>24.9 kB</td>\n            </tr>\n            <!-- 5 -->\n            <tr>\n                <td rowspan=\"2\">v5 (alpha)</td>\n                <td>Bootstrap</td>\n                <td>63.5 kB</td>\n                <td>16.2 kB</td>\n                <td rowspan=\"2\">16.2 kB</td>\n            </tr>\n            <tr>\n                <td>jQuery</td>\n                <td>-</td>\n                <td>-</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<p class=\"text-sm\">Note: I've excluded Popper.js from this because it is the same for both versions of Bootstrap.</p>\n\nWe can see that there's only a very small increase (1.3 mB Gzipped) in Bootstrap's file size to compensate for completely removing jQuery!\\*\\* Less data down the wire means faster page loads which is great for improved SEO and user experiences.\n\n<p class=\"text-sm\">**This file size will also be affected by changes other than dealing with the removal of jQuery, i.e. new features, so in reality removing jQuery made even less of a difference in Bootstrap's size!</p>\n\n## What Else is New?\n\nThere are some other new features of Bootstrap 5 which include:\n\n-   New CSS custom properties\n-   Updated forms & form controls\n-   New utilities API\n-   Enhanced grid system with a new XXL tier for really large screens\n\nI won't go into detail about any of these, but if you're interested you can [head over to the Bootstrap blog to read all about the new features](https://blog.getbootstrap.com/2020/06/16/bootstrap-5-alpha/ \"What's new in Bootstrap v5\").\n\n## Bootstrap Icons\n\nWhilst on the subject of Bootstrap I thought I should mention that they have recently released a great set of over 1,000 SVG icons which you can use on any project (you don't need to be using Bootstrap to use them). [Take a look at Bootstrap Icons](https://icons.getbootstrap.com/ \"Bootstrap Icons\") and see what you think!\n","publishDate":"2020-08-20T12:00+00:00","tags":["News","JavaScript","Framework","jQuery","Bootstrap"],"keywords":["bootstrap","jquery","dependency","css","js","javascript","framework","library"],"readTime":3},{"title":"Why do I want to start a blog?","slug":"why-do-i-want-to-start-a-blog","description":"My rationale behind wanting to create and write on my very own blog, with an outline of what I want to achieve for myself and anyone who reads my posts.","body":"It makes sense to kick off this blog by explaining why I want to start a blog at all!\n\nI spend quite a lot of time reading articles that I think might be interesting and/or useful for my career; it's part of how many of us keep up to date with everything that's happening in the industry. Reading content written by other developers makes me feel proud and grateful that there are a large number of people who are open and happy to share their knowledge and experiences so freely. It has inspired me to start doing the same.\n\n## I'm Doing This for You\n\nYou're welcome ;)\n\nBut seriously, I want to be able to give a little back to an industry which has given me so much support over my career so far.\n\n### Offering Help & Support\n\nI can't even begin to tell you the number of times I’ve been saved by a blog post. I think we've all been in the position of frantically scrambling through search results praying that you'll find a fix to whatever problem you're having at the time. And then...magic! You stumble across an article on a stranger's blog that completely saves the day.\n\nOr maybe it's just that you're trying to get your head around a piece of technology or a programming concept that confuses the heck out of you. You've read the official docs and some of the high profile blog posts and it's still not sinking in. Then, all of a sudden, you find someone who's written about it in a way that makes it all make sense!\n\nMy point is that I hope to be the one providing that kind of support and relief to someone else for a change.\n\n### Sharing Insight and Experience\n\nThis is particularly applicable/useful if you are a developer who is early on in their career or a student working your way towards a certification in software development. I got my first job as a developer back in 2015 and I've learned a heck of a lot over those five years which I'd love to be able to share with the world. I hope that you can use some of the knowledge that I have to share to help you learn and grow in your own career.\n\n### Creating Enjoyment and Interest\n\nI really want you to enjoy reading my work. There would be little point in creating content if I didn't think people might enjoy reading it!\n\n## I'm Doing This for Me Too\n\nAs much as all the above is completely true, I can’t pretend like there aren’t a few benefits for me too.\n\n### Learning and Growth\n\nI'm a strong believer that a great way to learn something is to try to teach it. Having the ability to teach a subject requires you to understand it well enough to be able to communicate the details effectively to a learner. This blog is my teaching platform and I intend on taking advantage of it in order to help me grow my own knowledge and experience.\n\n### Communication\n\nGood written and verbal communication are skills that I somewhat pride myself on. It takes consideration and practice to be an effective communicator and this platform will definitely provide me with plenty of practice!\n\n## Final Words\n\nI really hope this blog lives up to all of my hopes and expectations. It’s going to take some time and effort to build but I’m really excited to get creating and seeing how it all turns out!\n","publishDate":"2020-06-20T12:00+00:00","tags":["Personal"],"readTime":3}]